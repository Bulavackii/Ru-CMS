<?php

namespace Modules\Notifications\View\Components\Frontend;

use Illuminate\View\Component;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Request;
use Modules\Notifications\Models\Notification;

class NotificationsComponent extends Component
{
    // üì¶ –ö–æ–ª–ª–µ–∫—Ü–∏—è –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    public $notifications;

    public function __construct()
    {
        $user = Auth::user();
        $currentPath = '/' . ltrim(Request::path(), '/'); // üîç –¢–µ–∫—É—â–∏–π –ø—É—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä: /news/123

        // üß† –ü–æ–ª—É—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –≤–∫–ª—é—á—ë–Ω–Ω–æ—Å—Ç–∏, —Ü–µ–ª–∏ –∏ –º–∞—Ä—à—Ä—É—Ç—É
        $this->notifications = Notification::query()
            ->where('enabled', true)

            // üéØ –£—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é
            ->where(function ($query) use ($user) {
                if (!$user) {
                    $query->where('target', 'all');
                } elseif ($user->is_admin) {
                    $query->whereIn('target', ['all', 'admin']);
                } else {
                    $query->whereIn('target', ['all', 'user']);
                }
            })

            ->get()

            // üåê –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –º–∞—Ä—à—Ä—É—Ç—É
            ->filter(function (Notification $notification) use ($currentPath) {
                return $this->matchesRouteFilter($notification->route_filter, $currentPath);
            })

            ->values(); // üîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    }

    /**
     * üîç –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –º–∞—Ä—à—Ä—É—Ç—É
     */
    protected function matchesRouteFilter(?string $filter, string $currentPath): bool
    {
        $filter = trim($filter ?? '', '/');
        $cleanPath = trim($currentPath, '/');

        // üìå –ï—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç –ø—É—Å—Ç–æ–π ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π
        if ($filter === '' || $filter === '/') {
            return $cleanPath === '';
        }

        // üåü Wildcard-–ø–æ–¥–¥–µ—Ä–∂–∫–∞: –Ω–∞–ø—Ä–∏–º–µ—Ä, /news/* –±—É–¥–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å /news/123
        if ($filter === '*') {
            return true;
        }

        if (str_contains($filter, '*')) {
            $pattern = '#^' . str_replace('\*', '.*', preg_quote($filter, '#')) . '$#i';
            return (bool)preg_match($pattern, $cleanPath);
        }

        // üìé –°—Ç—Ä–æ–≥–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        return $cleanPath === $filter;
    }

    /**
     * üßæ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º Blade-–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
     */
    public function render()
    {
        return view('Notifications::frontend.list');
    }
}
