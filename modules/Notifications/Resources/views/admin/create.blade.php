@extends('layouts.admin')

@section('title', '–°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')

@section('content')
    <h1 class="text-2xl font-bold text-gray-800 dark:text-white mb-6">üìù –°–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</h1>

    @if ($errors->any())
        <div class="bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200 px-4 py-3 rounded mb-6 shadow">
            ‚ö†Ô∏è {{ $errors->first() }}
        </div>
    @endif

    <form method="POST" action="{{ route('admin.notifications.store') }}"
          class="space-y-6 w-full bg-white dark:bg-gray-900 p-6 rounded-lg shadow-md border border-gray-200 dark:border-gray-800">
        @csrf

        {{-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ --}}
        <x-admin.input label="–ó–∞–≥–æ–ª–æ–≤–æ–∫" name="title" required />

        {{-- –¢–∏–ø --}}
        <x-admin.select label="–¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" name="type" :options="[
            'text' => '–¢–µ–∫—Å—Ç',
            'cookie' => 'Cookie',
        ]" selected="text" />

        {{-- –ê—É–¥–∏—Ç–æ—Ä–∏—è --}}
        <x-admin.select label="–ü–æ–∫–∞–∑–∞—Ç—å –¥–ª—è" name="target" :options="[
            'all' => '–í—Å–µ',
            'admin' => '–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã',
            'user' => '–¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
        ]" selected="all" />

        {{-- –ü–æ–∑–∏—Ü–∏—è --}}
        <x-admin.select label="–ü–æ–∑–∏—Ü–∏—è" name="position" :options="[
            'top' => '–°–≤–µ—Ä—Ö—É',
            'bottom' => '–°–Ω–∏–∑—É',
            'fullscreen' => '–í–æ –≤–µ—Å—å —ç–∫—Ä–∞–Ω',
        ]" selected="top" />

        {{-- –ò–∫–æ–Ω–∫–∞ --}}
        <x-admin.input label="–ò–∫–æ–Ω–∫–∞" name="icon" value="‚ÑπÔ∏è" />

        {{-- –¶–≤–µ—Ç —Ñ–æ–Ω–∞ --}}
        <x-admin.input label="–¶–≤–µ—Ç —Ñ–æ–Ω–∞ (HEX)" name="bg_color" value="#cccaca" />

        {{-- –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ --}}
        <x-admin.input label="–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ (HEX)" name="text_color" value="#000000" />

        {{-- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ --}}
        <div>
            <label for="editor" class="block font-semibold text-gray-700 dark:text-gray-300 mb-1">–°–æ–¥–µ—Ä–∂–∏–º–æ–µ</label>
            <textarea name="message" id="editor" rows="6"
                      class="w-full border rounded px-3 py-2 dark:bg-gray-800 dark:text-gray-100">{{ old('message') }}</textarea>
        </div>

        {{-- –í—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ --}}
        <x-admin.input label="‚è∞ –í—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ (—Å–µ–∫)" name="duration" type="number" value="0"
                       hint="0 = –ø–æ–∫–∞ –Ω–µ –∑–∞–∫—Ä–æ–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" />

        {{-- –§–∏–ª—å—Ç—Ä –º–∞—Ä—à—Ä—É—Ç–∞ --}}
        <x-admin.input label="–ú–∞—Ä—à—Ä—É—Ç –∏–ª–∏ URL" name="route_filter" value="/" />

        {{-- –ö–ª—é—á cookie --}}
        <x-admin.input label="–ö–ª—é—á cookie (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)" name="cookie_key" />

        {{-- –ö–Ω–æ–ø–∫–∞ --}}
        <div class="pt-4">
            <button type="submit"
                    class="inline-flex items-center gap-2 bg-black hover:bg-gray-800 text-white px-6 py-2 rounded-md text-sm font-semibold shadow transition">
                üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </button>
        </div>
    </form>
@endsection

@push('scripts')
    <script src="{{ asset('admin/tinymce/tinymce.min.js') }}"></script>
    <script>
        tinymce.init({
            selector: '#editor',
            language: 'ru',
            language_url: '{{ asset('admin/tinymce/langs/ru.js') }}',
            height: 400,
            branding: false,
            convert_urls: false,
            plugins: [
                'image', 'media', 'mediaembed', 'link', 'lists', 'table', 'code', 'visualblocks', 'wordcount'
            ],
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | ' +
                'alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | ' +
                'link image media mediaembed table | code | removeformat',
            file_picker_types: 'image media',
            file_picker_callback: function(callback, value, meta) {
                const input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', meta.filetype === 'image' ? 'image/*' : 'video/*');
                input.onchange = function () {
                    const file = this.files[0];
                    const formData = new FormData();
                    formData.append('file', file);

                    fetch('{{ route('admin.upload.media') }}', {
                        method: 'POST',
                        headers: {
                            'X-CSRF-TOKEN': '{{ csrf_token() }}'
                        },
                        body: formData
                    }).then(response => response.json()).then(data => {
                        if (data.location) {
                            callback(data.location, { title: file.name });
                        } else {
                            alert('–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–µ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª.');
                        }
                    }).catch(error => {
                        alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ' + error.message);
                    });
                };
                input.click();
            }
        });
    </script>
@endpush
